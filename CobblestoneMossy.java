// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3) braces deadcode package natureoverhaul;import java.util.Random;import net.minecraft.block.Block;import net.minecraft.block.material.Material;import net.minecraft.entity.player.EntityPlayer;import net.minecraft.item.Item;import net.minecraft.item.ItemBlock;import net.minecraft.stats.StatList;import net.minecraft.world.World;import net.minecraft.world.biome.BiomeGenBase;import net.minecraftforge.common.EnumPlantType;/*** Mossy cobblestone** @author	Clinton Alexander*/public class CobblestoneMossy extends BlockGrowable {		// On tick update, attempt to spread to any near cobblestone    public void updateTick(World world, int i, int j, int k, Random random) {		if(!world.isRemote) {			boolean grow = NatureOverhaul.mossGrow;			if(grow) {				grow(world, i, j, k);			}		}	}		/**	* Get the growth probability	*	* @return	Growth probability	*/	public float getGrowthProb(World world, int i, int j, int k) {		BiomeGenBase biome = world.getBiomeGenForCoords(i, k);				float freq = NatureOverhaul.mossGrowthRate;				if(NatureOverhaul.biomeModifiedGrowth) {			if((biome.rainfall < 0.2F) || (biome.temperature > 1F)) {				return 0F;			} else {				freq = freq * getOptValueMult(biome.rainfall, optRain, 10F);				freq = freq * getOptValueMult(biome.temperature, optTemp, 2F);						return 1F / freq;			}		} else {			return 1F / freq;		}	}		/**	* Grow an item	 * @return 	*/	public boolean grow(World world, int i, int j, int k) {		int scanSize = 1;				for(int x = i - scanSize; x <= i + scanSize; x++) {				for(int y = j - scanSize; y <= j + scanSize; y++) {					for(int z = k - scanSize; z <= k + scanSize; z++) {						if(world.getBlockId(x, y, z) == Block.cobblestone.blockID) {							world.setBlock(x, y, z, blockID);							return true;						}					}				}			}		return false;	}}